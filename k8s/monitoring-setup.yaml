"""
Production Monitoring Setup for RevAI Pro Platform
Comprehensive monitoring configuration with Prometheus, Grafana, and alerting
"""

# Prometheus Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: revai-prod
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'revai-prod'
        environment: 'production'

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    scrape_configs:
      # Kubernetes API Server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      # Kubernetes Nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)

      # Kubernetes Pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name

      # RevAI Pro Services
      - job_name: 'revai-pro-services'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - revai-prod
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
          action: replace
          target_label: __scheme__
          regex: (https?)
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          action: replace
          target_label: __address__
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: kubernetes_name

      # PostgreSQL
      - job_name: 'postgresql'
        static_configs:
        - targets: ['postgresql:5432']
        metrics_path: /metrics
        scrape_interval: 30s

      # Redis
      - job_name: 'redis'
        static_configs:
        - targets: ['redis:6379']
        metrics_path: /metrics
        scrape_interval: 30s

      # Kafka
      - job_name: 'kafka'
        static_configs:
        - targets: ['kafka:9092']
        metrics_path: /metrics
        scrape_interval: 30s

      # Node Exporter
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_endpoints_name]
          regex: 'node-exporter'
          action: keep

  # Alert Rules
  alerts.yml: |
    groups:
    - name: revai-pro-alerts
      rules:
      # High Error Rate
      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value }} errors per second"

      # High Response Time
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 2
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High response time detected"
          description: "95th percentile response time is {{ $value }} seconds"

      # Service Down
      - alert: ServiceDown
        expr: up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Service is down"
          description: "Service {{ $labels.instance }} is down"

      # High CPU Usage
      - alert: HighCPUUsage
        expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage"
          description: "CPU usage is {{ $value }}%"

      # High Memory Usage
      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage"
          description: "Memory usage is {{ $value }}%"

      # Disk Space Low
      - alert: DiskSpaceLow
        expr: (1 - (node_filesystem_avail_bytes / node_filesystem_size_bytes)) * 100 > 90
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Disk space low"
          description: "Disk space usage is {{ $value }}%"

      # Database Connection Issues
      - alert: DatabaseConnectionIssues
        expr: pg_up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Database connection issues"
          description: "Cannot connect to PostgreSQL database"

      # Redis Connection Issues
      - alert: RedisConnectionIssues
        expr: redis_up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Redis connection issues"
          description: "Cannot connect to Redis"

      # Kafka Issues
      - alert: KafkaIssues
        expr: kafka_server_kafkaserver_brokerstate != 3
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Kafka broker issues"
          description: "Kafka broker state is {{ $value }}"

      # RevAI Pro Specific Alerts
      - alert: RevAIHighOverrideRate
        expr: rate(revai_override_events_total[5m]) > 0.3
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High override rate detected"
          description: "User override rate is {{ $value }} per second"

      - alert: RevAITrustDrift
        expr: abs(revai_trust_drift_total) > 0.2
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Trust drift detected"
          description: "Trust drift is {{ $value }}"

      - alert: RevAIConfidenceLow
        expr: revai_confidence_score < 0.5
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Low confidence score"
          description: "AI confidence score is {{ $value }}"

      - alert: RevAISLAViolation
        expr: revai_sla_status == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "SLA violation detected"
          description: "SLA status is violated"

---
# Grafana Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: revai-prod
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus:9090
      isDefault: true
      editable: true

    - name: PostgreSQL
      type: postgres
      access: proxy
      url: postgresql:5432
      database: revai_prod
      user: revai_user
      secureJsonData:
        password: revai_prod_password

    - name: Redis
      type: redis
      access: proxy
      url: redis:6379
      password: revai_redis_password

---
# Grafana Dashboards
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: revai-prod
data:
  revai-overview.json: |
    {
      "dashboard": {
        "id": null,
        "title": "RevAI Pro - Overview",
        "tags": ["revai-pro"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "System Health",
            "type": "stat",
            "targets": [
              {
                "expr": "up",
                "legendFormat": "Services Up"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "thresholds": {
                  "steps": [
                    {
                      "color": "red",
                      "value": 0
                    },
                    {
                      "color": "green",
                      "value": 1
                    }
                  ]
                }
              }
            },
            "gridPos": {
              "h": 8,
              "w": 6,
              "x": 0,
              "y": 0
            }
          },
          {
            "id": 2,
            "title": "Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_requests_total[5m])",
                "legendFormat": "{{method}} {{status}}"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 6,
              "y": 0
            }
          },
          {
            "id": 3,
            "title": "Response Time",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m]))",
                "legendFormat": "95th percentile"
              },
              {
                "expr": "histogram_quantile(0.50, rate(http_request_duration_seconds_bucket[5m]))",
                "legendFormat": "50th percentile"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 6,
              "x": 18,
              "y": 0
            }
          },
          {
            "id": 4,
            "title": "Error Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_requests_total{status=~\"5..\"}[5m])",
                "legendFormat": "5xx errors"
              },
              {
                "expr": "rate(http_requests_total{status=~\"4..\"}[5m])",
                "legendFormat": "4xx errors"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 8
            }
          },
          {
            "id": 5,
            "title": "CPU Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "100 - (avg by(instance) (rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)",
                "legendFormat": "{{instance}}"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 8
            }
          },
          {
            "id": 6,
            "title": "Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "(1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100",
                "legendFormat": "{{instance}}"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 16
            }
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }

  revai-business-metrics.json: |
    {
      "dashboard": {
        "id": null,
        "title": "RevAI Pro - Business Metrics",
        "tags": ["revai-pro", "business"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Mode Adoption",
            "type": "piechart",
            "targets": [
              {
                "expr": "sum by (ui_mode) (rate(revai_mode_adoption_total[5m]))",
                "legendFormat": "{{ui_mode}}"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 6,
              "x": 0,
              "y": 0
            }
          },
          {
            "id": 2,
            "title": "Override Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(revai_override_events_total[5m])",
                "legendFormat": "Overrides/sec"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 6,
              "y": 0
            }
          },
          {
            "id": 3,
            "title": "Trust Score",
            "type": "graph",
            "targets": [
              {
                "expr": "avg(revai_trust_score)",
                "legendFormat": "Average Trust Score"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 6,
              "x": 18,
              "y": 0
            }
          },
          {
            "id": 4,
            "title": "Confidence Score",
            "type": "graph",
            "targets": [
              {
                "expr": "avg(revai_confidence_score)",
                "legendFormat": "Average Confidence Score"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 8
            }
          },
          {
            "id": 5,
            "title": "SLA Compliance",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(revai_sla_status) / count(revai_sla_status) * 100",
                "legendFormat": "SLA Compliance %"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 8
            }
          }
        ],
        "time": {
          "from": "now-24h",
          "to": "now"
        },
        "refresh": "1m"
      }
    }

---
# AlertManager Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: revai-prod
data:
  alertmanager.yml: |
    global:
      smtp_smarthost: 'smtp.gmail.com:587'
      smtp_from: 'alerts@revai-pro.com'
      smtp_auth_username: 'alerts@revai-pro.com'
      smtp_auth_password: 'your-smtp-password'

    route:
      group_by: ['alertname']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'web.hook'
      routes:
      - match:
          severity: critical
        receiver: 'critical-alerts'
      - match:
          severity: warning
        receiver: 'warning-alerts'

    receivers:
    - name: 'web.hook'
      webhook_configs:
      - url: 'http://webhook:5001/'

    - name: 'critical-alerts'
      email_configs:
      - to: 'oncall@revai-pro.com'
        subject: '[CRITICAL] RevAI Pro Alert: {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          {{ end }}
      slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#alerts-critical'
        title: 'RevAI Pro Critical Alert'
        text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'

    - name: 'warning-alerts'
      email_configs:
      - to: 'team@revai-pro.com'
        subject: '[WARNING] RevAI Pro Alert: {{ .GroupLabels.alertname }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          {{ end }}
      slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#alerts-warning'
        title: 'RevAI Pro Warning Alert'
        text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'

---
# Service Monitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: revai-pro-services
  namespace: revai-prod
  labels:
    app: revai-pro
spec:
  selector:
    matchLabels:
      app: revai-pro
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s

---
# Pod Monitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: revai-pro-pods
  namespace: revai-prod
  labels:
    app: revai-pro
spec:
  selector:
    matchLabels:
      app: revai-pro
  podMetricsEndpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
