version: '3.8'

services:
  # Main AI Orchestrator
  ai-orchestrator:
    build:
      context: .
      dockerfile: Dockerfile.microservices
    ports:
      - "8001:8001"
    environment:
      - SERVICE_NAME=ai-orchestrator
      - SERVICE_PORT=8001
    depends_on:
      - agent-registry
      - routing-orchestrator
      - kpi-exporter
      - confidence-thresholds
      - model-audit
      - calendar-automation
      - letsmeet-automation
      - cruxx-automation
      - run-trace-schema
      - dlq-replay-tooling
      - metrics-exporter
      - event-bus-schema-registry
    networks:
      - ai-network

  # Agent Registry Service
  agent-registry:
    build:
      context: .
      dockerfile: Dockerfile.microservices
    ports:
      - "8002:8002"
    environment:
      - SERVICE_NAME=agent-registry
      - SERVICE_PORT=8002
    networks:
      - ai-network

  # Routing Orchestrator Service
  routing-orchestrator:
    build:
      context: .
      dockerfile: Dockerfile.microservices
    ports:
      - "8003:8003"
    environment:
      - SERVICE_NAME=routing-orchestrator
      - SERVICE_PORT=8003
    networks:
      - ai-network

  # KPI Exporter Service
  kpi-exporter:
    build:
      context: .
      dockerfile: Dockerfile.microservices
    ports:
      - "8004:8004"
    environment:
      - SERVICE_NAME=kpi-exporter
      - SERVICE_PORT=8004
    networks:
      - ai-network

  # Confidence Thresholds Service
  confidence-thresholds:
    build:
      context: .
      dockerfile: Dockerfile.microservices
    ports:
      - "8005:8005"
    environment:
      - SERVICE_NAME=confidence-thresholds
      - SERVICE_PORT=8005
    networks:
      - ai-network

  # Model Audit Service
  model-audit:
    build:
      context: .
      dockerfile: Dockerfile.microservices
    ports:
      - "8006:8006"
    environment:
      - SERVICE_NAME=model-audit
      - SERVICE_PORT=8006
    networks:
      - ai-network

  # Calendar Automation Service
  calendar-automation:
    build:
      context: .
      dockerfile: Dockerfile.microservices
    ports:
      - "8007:8007"
    environment:
      - SERVICE_NAME=calendar-automation
      - SERVICE_PORT=8007
    networks:
      - ai-network

  # Let's Meet Automation Service
  letsmeet-automation:
    build:
      context: .
      dockerfile: Dockerfile.microservices
    ports:
      - "8008:8008"
    environment:
      - SERVICE_NAME=letsmeet-automation
      - SERVICE_PORT=8008
    networks:
      - ai-network

  # Cruxx Automation Service
  cruxx-automation:
    build:
      context: .
      dockerfile: Dockerfile.microservices
    ports:
      - "8009:8009"
    environment:
      - SERVICE_NAME=cruxx-automation
      - SERVICE_PORT=8009
    networks:
      - ai-network

  # Run Trace Schema Service
  run-trace-schema:
    build:
      context: .
      dockerfile: Dockerfile.microservices
    ports:
      - "8010:8010"
    environment:
      - SERVICE_NAME=run-trace-schema
      - SERVICE_PORT=8010
    networks:
      - ai-network

  # DLQ + Replay Tooling Service
  dlq-replay-tooling:
    build:
      context: .
      dockerfile: Dockerfile.microservices
    ports:
      - "8011:8011"
    environment:
      - SERVICE_NAME=dlq-replay-tooling
      - SERVICE_PORT=8011
    networks:
      - ai-network

  # Metrics Exporter Service
  metrics-exporter:
    build:
      context: .
      dockerfile: Dockerfile.microservices
    ports:
      - "8012:8012"
    environment:
      - SERVICE_NAME=metrics-exporter
      - SERVICE_PORT=8012
    networks:
      - ai-network

  # Event Bus + Schema Registry Service
  event-bus-schema-registry:
    build:
      context: .
      dockerfile: Dockerfile.microservices
    ports:
      - "8013:8013"
    environment:
      - SERVICE_NAME=event-bus-schema-registry
      - SERVICE_PORT=8013
    networks:
      - ai-network

  # Redis for caching and message queuing
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-network

  # PostgreSQL for persistent storage
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=revai_ai
      - POSTGRES_USER=revai_user
      - POSTGRES_PASSWORD=revai_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ai-network

volumes:
  redis_data:
  postgres_data:

networks:
  ai-network:
    driver: bridge
