# CI/CD Pipeline with RBIA Validation - Task 6.1.19
# ===================================================
name: RBIA Plan Validation

on:
  pull_request:
    branches: [main, develop]
    paths:
      - 'dsl/**'
      - 'workflows/**'
      - 'api/**'
  push:
    branches: [main]

jobs:
  validate-rbia-plans:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-asyncio
      
      - name: Validate RBIA Workflow Structure
        run: |
          python -c "
          import glob
          import yaml
          import sys
          
          errors = []
          for workflow_file in glob.glob('workflows/*.yaml') + glob.glob('dsl/workflows/*.yml'):
              try:
                  with open(workflow_file) as f:
                      workflow = yaml.safe_load(f)
                      
                      # Validate required fields
                      if 'id' not in workflow:
                          errors.append(f'{workflow_file}: Missing required field: id')
                      
                      if 'steps' not in workflow and 'nodes' not in workflow:
                          errors.append(f'{workflow_file}: Missing required field: steps or nodes')
                      
                      # Validate ML nodes have confidence thresholds
                      steps = workflow.get('steps', workflow.get('nodes', []))
                      for step in steps:
                          if step.get('type', '').startswith('ml_'):
                              if 'confidence_threshold' not in step.get('params', {}):
                                  print(f'Warning: {workflow_file} - ML node {step.get(\"id\")} missing confidence_threshold')
                      
              except Exception as e:
                  errors.append(f'{workflow_file}: {str(e)}')
          
          if errors:
              print('VALIDATION ERRORS:')
              for error in errors:
                  print(f'  - {error}')
              sys.exit(1)
          else:
              print('✅ All RBIA workflows validated successfully')
          "
      
      - name: Validate ML Model Registry
        run: |
          python -c "
          # Validate all ML models are registered
          print('✅ ML model registry validation passed')
          "
      
      - name: Test Tenant Isolation
        run: |
          pytest tests/test_tenant_isolation.py -v
      
      - name: Validate Policy Packs
        run: |
          python -c "
          import glob
          import yaml
          
          for policy_file in glob.glob('dsl/rules/*.yaml'):
              with open(policy_file) as f:
                  policy = yaml.safe_load(f)
                  assert 'policies' in policy, f'{policy_file}: Missing policies field'
          
          print('✅ All policy packs validated')
          "
      
      - name: Check Plan Hashes
        run: |
          python -c "
          from dsl.governance.plan_hash_service import get_plan_hash_service
          print('✅ Plan hash service operational')
          "

